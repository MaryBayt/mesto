(()=>{"use strict";var t={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button-save_state_disabled",activeButtonClass:"popup__button-save_state_active",inputErrorClass:"popup__input_error",activeErrorClass:"error_state_active"},e=document.querySelector(".profile__edit-button"),n=document.querySelector(".profile__add-button"),r=document.querySelector(".profile__picture");function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=n,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._activeButtonClass=e.activeButtonClass,this._inputErrorClass=e.inputErrorClass,this._activeErrorClass=e.activeErrorClass,this._formSelector=e.formSelector,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}var e,n;return e=t,(n=[{key:"_showInputError",value:function(t){var e=this._form.parentNode.querySelector("#".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.classList.add(this._activeErrorClass),e.textContent=t.validationMessage,console.log("показываю ошибку")}},{key:"_hideInputError",value:function(t){var e=this._form.parentNode.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._activeErrorClass),e.textContent="",console.log("скрываю ошибку")}},{key:"_isValid",value:function(t){t.validity.valid?(this._hideInputError(t),console.log("убрала ошибку")):(this._showInputError(t),console.log("показала ошибку"))}},{key:"_hasInvalidInput",value:function(){return console.log("проверю есть ли инвалид инпуты"),this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this.disableSaveButton(),console.log("переключаю кнопку на неактивную")):(this._enableSaveButton(),console.log("переключаю кнопку на активную"))}},{key:"disableSaveButton",value:function(){this._submitButton.setAttribute("disabled",!0),this._submitButton.classList.remove(this._activeButtonClass),this._submitButton.classList.add(this._inactiveButtonClass)}},{key:"_enableSaveButton",value:function(){this._submitButton.removeAttribute("disabled",!0),this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.classList.add(this._activeButtonClass)}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),console.log("выключила кнопку изначально"),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._isValid(e),console.log("прогоняю по инпутам валидацию"),t._toggleButtonState(),console.log("переключила состояние кнопки")}))}))}},{key:"enableValidation",value:function(){this._setEventListeners(),console.log("повесила слушатель инпута")}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var c=function(){function t(e,n,r,o,i){var a=e.cardName,c=e.cardLink,u=e.likes,s=e.id,l=e.userId,f=e.ownerId;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._cardName=a,this._cardLink=c,this._likes=u,this._id=s,this._userId=l,this._ownerId=f,this._templateSelector=n,this._handleCardClick=r,this._handleDeleteClick=o,this._handleLikeClick=i}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"generateCard",value:function(){return this._card=this._getTemplate(),this._setEventListeners(),this._zoomPhoto.src=this._cardLink,this._zoomPhoto.alt=this._cardName,this._card.querySelector(".place__name").textContent=this._cardName,this._likeCountElement=this._card.querySelector(".place__like-counter"),this.setLikes(this._likes),this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this._card}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton=this._card.querySelector(".place__button-like"),this._deleteButton=this._card.querySelector(".place__button-delete"),this._zoomPhoto=this._card.querySelector(".place__pic"),this._likeButton.addEventListener("click",(function(){t._handleLikeClick(t._id)})),this._deleteButton.addEventListener("click",(function(){t._handleDeleteClick(t._id)})),this._zoomPhoto.addEventListener("click",(function(){t._handleCardClick(t._cardName,t._cardLink)}))}},{key:"isLiked",value:function(){var t=this;return this._likes.find((function(e){return e._id===t._userId}))}},{key:"_likeCard",value:function(){this._likeButton.classList.add("place__button-like_state_active")}},{key:"_unlikeCard",value:function(){this._likeButton.classList.remove("place__button-like_state_active")}},{key:"setLikes",value:function(t){this._likes=t,this._likeCountElement.textContent=this._likes.length,this.isLiked()?this._likeCard():this._unlikeCard()}},{key:"deleteCard",value:function(){this._card.remove(),this._card=null}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var s=function(){function t(e){var n,r,o=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),r=function(t){"Escape"===t.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(e)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(e.target===e.currentTarget||e.target.classList.contains("popup__button-close"))&&t.close()}))}}])&&u(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=h(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},p.apply(this,arguments)}function h(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}function d(t,e){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},d(t,e)}function y(t,e){if(e&&("object"===l(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var b=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&d(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=_(r);if(o){var n=_(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return y(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._zoomPhoto=e._popup.querySelector(".popup__photo"),e._zoomDescription=e._popup.querySelector(".popup__description"),e}return e=a,(n=[{key:"open",value:function(t,e){p(_(a.prototype),"open",this).call(this),this._zoomPhoto.setAttribute("src",e),this._zoomPhoto.setAttribute("alt",t),this._zoomDescription.textContent=t}}])&&f(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(s);function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function m(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=w(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},k.apply(this,arguments)}function w(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=C(t)););return t}function S(t,e){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},S(t,e)}function O(t,e){if(e&&("object"===v(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function C(t){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},C(t)}var E=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&S(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=C(r);if(o){var n=C(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return O(this,t)});function a(t,e){var n,r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitCallback=e,n._form=n._popup.querySelector(".popup__form"),n._inputs=function(t){if(Array.isArray(t))return m(t)}(r=n._form.querySelectorAll(".popup__input"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(r)||function(t,e){if(t){if("string"==typeof t)return m(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?m(t,e):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n._button=n._popup.querySelector('button[type="submit"]'),n._buttonStandardText=n._button.textContent,n}return e=a,(n=[{key:"_getInputValues",value:function(){return this._inputs.reduce((function(t,e){return t[e.id]=e.value,t}),{})}},{key:"setInputValues",value:function(t){this._inputs.forEach((function(e){t[e.name]&&(e.value=t[e.name])}))}},{key:"getForm",value:function(){return this._form}},{key:"setEventListeners",value:function(){var t=this;k(C(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submitCallback(t._getInputValues())}))}},{key:"close",value:function(){k(C(a.prototype),"close",this).call(this),this._form.reset()}},{key:"changeLoadingText",value:function(t){this._button.textContent=t?"Сохранение...":this._buttonStandardText}}])&&g(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(s);function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=B(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},j.apply(this,arguments)}function B(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=T(t)););return t}function I(t,e){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},I(t,e)}function R(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function T(t){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},T(t)}var A=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&I(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=T(r);if(o){var n=T(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return R(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitCallback=e,n._form=n._popup.querySelector(".popup__form"),n}return e=a,(n=[{key:"close",value:function(){j(T(a.prototype),"close",this).call(this)}},{key:"open",value:function(t){j(T(a.prototype),"open",this).call(this),this._data=t}},{key:"setEventListeners",value:function(){var t=this;j(T(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submitCallback(t._data)}))}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(s);function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var q=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t){var e=this;t.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&x(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function D(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var U=function(){function t(e){var n=e.profileName,r=e.profileAbout,o=e.avatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._profileName=document.querySelector(n),this._profileAbout=document.querySelector(r),this._avatar=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{person:this._profileName.textContent,about:this._profileAbout.textContent}}},{key:"setUserInfo",value:function(t,e){this._profileName.textContent=t,this._profileAbout.textContent=e}},{key:"setAvatar",value:function(t){console.log(this._avatar),this._avatar.src=t}}])&&D(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function N(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var z,V=new(function(){function t(e){var n=e.baseUrl,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var e,n;return e=t,(n=[{key:"getProfile",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._getResponseData)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._getResponseData)}},{key:"editProfile",value:function(t,e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:e})}).then(this._getResponseData)}},{key:"editAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._getResponseData)}},{key:"addCard",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:e})}).then(this._getResponseData)}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._getResponseData)}},{key:"deleteLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._headers}).then(this._getResponseData)}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._headers}).then(this._getResponseData)}},{key:"_getResponseData",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}}])&&N(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"4ac1cf7c-1047-4676-a884-9a0f42ad12cc","Content-Type":"application/json"}});function F(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function J(t){var e=new c({cardName:t.name,cardLink:t.link,likes:t.likes,id:t._id,userId:z,ownerId:t.owner._id},"#card-template",H.open.bind(H),(function(t){Q.open({_id:t,callback:e.deleteCard.bind(e)})}),(function(t){e.isLiked()?V.deleteLike(t).then((function(t){console.log(t),e.setLikes(t.likes)})).catch((function(t){return console.log("Ошибка.....: ".concat(t))})):V.addLike(t).then((function(t){console.log(t),e.setLikes(t.likes)})).catch((function(t){return console.log("Ошибка.....: ".concat(t))}))}));return e.generateCard()}Promise.all([V.getProfile(),V.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){c=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return F(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];M.setUserInfo(o.name,o.about),M.setAvatar(o.avatar),z=o._id;var a=i.reverse();W.renderItems(a)})).catch((function(t){console.log(t)}));var M=new U({profileName:".profile__person",profileAbout:".profile__about",avatar:".profile__avatar"}),H=new b(".popup_zoom"),$=new E(".popup_avatar",(function(t){$.changeLoadingText(!0),V.editAvatar(t.avatar).then((function(t){M.setAvatar(t.avatar),$.close()})).catch((function(t){return console.log("Ошибка.....: ".concat(t))})).finally((function(){return $.changeLoadingText(!1)}))})),G=new E(".popup_card",(function(t){G.changeLoadingText(!0),V.addCard(t.name,t.link).then((function(t){W.addItem(J(t)),G.close()})).catch((function(t){return console.log("Ошибка.....: ".concat(t))})).finally((function(){return G.changeLoadingText(!1)}))})),K=new E(".popup_edit",(function(t){K.changeLoadingText(!0),V.editProfile(t.person,t.about).then((function(t){M.setUserInfo(t.name,t.about),K.close()})).catch((function(t){return console.log("Ошибка.....: ".concat(t))})).finally((function(){return K.changeLoadingText(!1)}))})),Q=new A(".popup_delete",(function(t){var e=t._id,n=t.callback;V.deleteCard(e).then((function(){n(),Q.close()})).catch((function(t){return console.log("Ошибка.....: ".concat(t))}))})),W=new q((function(t){W.addItem(J(t))}),".places__list"),X=new i(t,K.getForm()),Y=new i(t,G.getForm()),Z=new i(t,$.getForm());X.enableValidation(),Y.enableValidation(),Z.enableValidation(),G.setEventListeners(),K.setEventListeners(),H.setEventListeners(),$.setEventListeners(),Q.setEventListeners(),e.addEventListener("click",(function(){K.open();var t=M.getUserInfo();K.setInputValues({popup__input_value_person:t.person,popup__input_value_about:t.about}),X.disableSaveButton()})),n.addEventListener("click",(function(){G.open(),Y.disableSaveButton()})),r.addEventListener("click",(function(){$.open(),Z.disableSaveButton()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,